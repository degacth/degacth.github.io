// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  require(['/puzzle/assets/coffee/Puzzle.js', '/bower_components/handlebars/handlebars.min.js', '/bower_components/swag/lib/swag.min.js'], function(Puzzle, Handlebars) {
    var Main;
    Main = (function() {
      function Main() {
        this.puzzleThumbnail = __bind(this.puzzleThumbnail, this);
        this.applyThumbnail = __bind(this.applyThumbnail, this);
        this.updateThumbnail = __bind(this.updateThumbnail, this);
        this.setImagePath = __bind(this.setImagePath, this);
        this.setGrid = __bind(this.setGrid, this);
        var imagesTemplate, radIndex;
        Swag.registerHelpers(Handlebars);
        this.imagesPath = '/puzzle/images/';
        this.settingCtx = '#settings';
        this.ranger = $('input.ranger');
        this.grid = this.ranger.val();
        this.thumbnail = {
          canvas: thumbnail,
          ctx: thumbnail.getContext('2d'),
          parent: $(thumbnail).parent()
        };
        this.thumbnail.canvas.width = this.thumbnail.canvas.height = this.thumbnail.parent.height();
        imagesTemplate = Handlebars.compile(this.templates.imageList);
        $('.images', this.settingCtx).html(imagesTemplate({
          images: this.images
        }));
        radIndex = this._getRandom(0, this.images.length - 1);
        this.image = this.images[radIndex][0];
        this.puzzle = new Puzzle('puzzle');
        this.puzzle.setImagePath(this._getFullPath(this.image));
        this.puzzle.setGrid(this.grid);
        this.puzzle.init();
        this._initEvents();
      }

      Main.prototype.setGrid = function() {
        this.grid = this.ranger.val();
        return this.updateThumbnail();
      };

      Main.prototype.setImagePath = function(e) {
        this.image = $(e.target).data('path');
        return this.updateThumbnail();
      };

      Main.prototype.updateThumbnail = function() {
        var ctx, drawLines, img, len, lines, size, step, _i, _ref, _results;
        img = this._getFullPath(this.image);
        if (!this.puzzle.im.get(img)) {
          this.puzzle.im.addImage(img, img);
          return this.puzzle.im.load(this.updateThumbnail);
        }
        img = this.puzzle.im.get(img);
        len = Math.min(img.width, img.height);
        ctx = this.thumbnail.ctx;
        size = this.thumbnail.canvas.width;
        ctx.drawImage(img, (img.width - len) / 2, (img.height - len) / 2, len, len, 0, 0, size, size);
        step = Math.round(size / this.grid);
        ctx.lineWidth = 3;
        ctx.strokeStyle = '#ffffff';
        drawLines = function(line) {
          ctx.beginPath();
          ctx.moveTo(line * step, 0);
          ctx.lineTo(line * step, size);
          ctx.moveTo(0, line * step);
          ctx.lineTo(size, line * step);
          return ctx.stroke();
        };
        _results = [];
        for (lines = _i = 0, _ref = this.grid; 0 <= _ref ? _i < _ref : _i > _ref; lines = 0 <= _ref ? ++_i : --_i) {
          _results.push(drawLines(lines));
        }
        return _results;
      };

      Main.prototype.applyThumbnail = function() {
        this.puzzle.setImagePath(this._getFullPath(this.image));
        this.puzzle.setGrid(this.grid);
        return this.puzzle.init();
      };

      Main.prototype._initEvents = function() {
        this.ranger.on('change', this.setGrid);
        $(document).on('click', "" + this.settingCtx + " .images .image-button", this.setImagePath);
        $('.apply-button').on('click', this.applyThumbnail);
        return $('.uk-icon-photo').on('click', this.puzzleThumbnail);
      };

      Main.prototype.puzzleThumbnail = function(e) {
        var $this;
        $this = $(e.target);
        return this.puzzle.showThumbnail()($this.hasClass('hide') ? void 0 : this.puzzle.draw());
      };

      Main.prototype.images = [['0b139e316d32f50ef853d14c99ba9dc7.jpg', 'Жалкий кот'], ['1298908073_D8F0E5EA203464.jpg', 'Куча шреков'], ['1364573183-785.jpg', 'Медвевь и самовар'], ['1520-spider-man-1920x1080-movie-wallpaper.jpg', 'ЧелоПук'], ['7880-angry-birds-1920x1080-game-wallpaper.jpg', 'Злостные птицы'], ['anywalls.com-39973.jpg', 'Мегавольт'], ['batman-fan-art-wallpaper-1920-1080-6531.jpg', 'Бетман'], ['clumsy-the-smurfs-2-21626-1920x1080.jpg', 'Смурф'], ['hq-wallpapers_ru_cartoons_59495_1920x1080.jpg', 'Монстры'], ['kitty-and-puss-wallpaper.jpg', 'Китти и кот'], ['kungfupanda.jpg', 'Панда кунг-фу'], ['motto.net.ua-18208.jpg', 'Маша'], ['motto.net.ua-24980.jpg', 'Оптимус Прайм'], ['motto.net.ua-7516.jpg', 'Тачки'], ['motto.net.ua-876.jpg', 'Чёрный плащь'], ['scrooge.jpg', 'Скрудж'], ['tangled-musical-film-1920x1080-wallpaper-4651.jpg', 'Красно-девица'], ['tt0400717.jpg', 'Звери'], ['vinney.jpg', 'Винни Пух'], ['wwalls.ru-42830.jpg', 'Чужой']];

      Main.prototype.templates = {
        imageList: '{{#eachIndex images}}\n  <li>\n    <span data-path="{{first item}}" class="image-button">{{last item}}</span>\n  </li>\n{{/eachIndex}}'
      };

      Main.prototype._getRandom = function(min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
      };

      Main.prototype._getFullPath = function(filename) {
        return "" + this.imagesPath + filename;
      };

      return Main;

    })();
    new Main;
    return $('.ranger').ranger({
      vertical: true
    });
  });

}).call(this);
