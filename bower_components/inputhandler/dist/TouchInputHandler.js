// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['./InputHandlerBase.js'], function(InputHandlerBase) {
    var TouchInputHandler;
    return TouchInputHandler = (function(_super) {
      __extends(TouchInputHandler, _super);

      function TouchInputHandler(element) {
        this._onMoveDomEvent = __bind(this._onMoveDomEvent, this);
        this._onUpDomEvent = __bind(this._onUpDomEvent, this);
        this._onDownDomEvent = __bind(this._onDownDomEvent, this);
        TouchInputHandler.__super__.constructor.call(this, element);
        this._lastInteractionCoordinates = null;
        this._attachDomListeners();
      }

      TouchInputHandler.prototype._attachDomListeners = function() {
        this._element.addEventListener('touchstart', this._onDownDomEvent);
        this._element.addEventListener('touchend', this._onUpDomEvent);
        return this._element.addEventListener('touchmove', this._onMoveDomEvent);
      };

      TouchInputHandler.prototype._onDownDomEvent = function(e) {
        this._lastInteractionCoordinates = this._getInputCoordinates(e);
        return TouchInputHandler.__super__._onDownDomEvent.call(this, e);
      };

      TouchInputHandler.prototype._onUpDomEvent = function(e) {
        this.emit('up', {
          x: this._lastInteractionCoordinates.x,
          y: this._lastInteractionCoordinates.y,
          moved: this._moving,
          domEvent: e
        });
        this._stopEventIfRequired(e);
        this._lastInteractionCoordinates = null;
        return this._moving = false;
      };

      TouchInputHandler.prototype._onMoveDomEvent = function(e) {
        this._lastInteractionCoordinates = this._getInputCoordinates(e);
        return TouchInputHandler.__super__._onMoveDomEvent.call(this, e);
      };

      return TouchInputHandler;

    })(InputHandlerBase);
  });

}).call(this);
